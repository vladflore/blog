<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://vladflore.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vladflore.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-06-04T23:07:55+02:00</updated><id>https://vladflore.github.io/blog/feed.xml</id><title type="html">Vlad’s Blog</title><subtitle>A place to share stuff about IT and life.</subtitle><entry><title type="html">SonarQube on AWS EC2</title><link href="https://vladflore.github.io/blog/sonarqube" rel="alternate" type="text/html" title="SonarQube on AWS EC2" /><published>2020-06-04T00:00:00+02:00</published><updated>2020-06-04T00:00:00+02:00</updated><id>https://vladflore.github.io/blog/aws-ec2-sonarqube</id><content type="html" xml:base="https://vladflore.github.io/blog/sonarqube">&lt;p&gt;In this post I will share my experience with installing SonarQube on an AWS EC2 instance. What you’ll see below are some steps and hints I followed when setting up a SonarQube Server on an EC2 machine.&lt;/p&gt;

&lt;h3 id=&quot;the-motivation-behind&quot;&gt;The motivation behind&lt;/h3&gt;

&lt;p&gt;I wanted a SonarQube Server running in the cloud so that my GitHub projects could benefit of it. It is always a good idea to have some quality checks performed on your code and some way to drill down through them and get an idea on how good or bad your code is. I also didn’t want to set up my own cloud, so I just sticked with AWS EC2 solution, despite the fact that it is not always for free.&lt;/p&gt;

&lt;p&gt;Make sure to check the documentation and the billing policies to not have any surprises at the end of the month. In case you do not need the instances to run all the time you can stop them and only start them when you need them. A stopped instance is billed differently and less than a running one.&lt;/p&gt;

&lt;p&gt;As I said, I want to use Sonar for my GitHub projects, which means I want it configured specifically to my needs, which are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the quality checks (history) should be persisted, a.k.a, an in-memory database will not suffice. I will use PostgreSQL 12.&lt;/li&gt;
  &lt;li&gt;I want mutation testing (MT) enabled and I want to use the MT rules together with the default rules to check the code. As for the language I will initially start with Java.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having said this, let’s start with the installation.&lt;/p&gt;

&lt;h3 id=&quot;step-1&quot;&gt;Step 1&lt;/h3&gt;

&lt;h4 id=&quot;get-an-aws-ec2-instance-up-and-running&quot;&gt;Get an AWS EC2 instance up and running.&lt;/h4&gt;

&lt;p&gt;There is not much to say here, go to the &lt;a href=&quot;https://console.aws.amazon.com/&quot;&gt;AWS Console&lt;/a&gt;, check the documentation and follow the steps, it’s pretty intuitive and no brainer at all. After having done that - the instance is running and you can SSH into it, proceed with the next step.&lt;/p&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;h4 id=&quot;prepare-the-ec2-instance-for-sonarqube-installation&quot;&gt;Prepare the EC2 instance for SonarQube installation.&lt;/h4&gt;

&lt;p&gt;You won’t have pretty much anything pre-installed so you’ll have to do it yourself.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; most of the commands require sudo access, so…you have been warned!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;update-the-system&quot;&gt;Update the system&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt upgrade&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;install-unzip-tool&quot;&gt;Install unzip tool&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;unzip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;install-java-11&quot;&gt;Install Java 11&lt;/h4&gt;

&lt;p&gt;SonarQube 8.3 requires Java - Oracle JRE 11 or OpenJDK 11 - installed on the machine, I’ll go with OpenJDK.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openjdk-11-jdk&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;install-postgresql-12&quot;&gt;Install PostgreSQL 12&lt;/h4&gt;

&lt;p&gt;Bbefore running the command &lt;em&gt;add the PostgreSQL apt repository&lt;/em&gt; as documented &lt;a href=&quot;https://www.postgresql.org/download/linux/ubuntu/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;postgresql-12&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;prepare-postgresql-for-sonarqube&quot;&gt;Prepare PostgreSQL for SonarQube&lt;/h4&gt;

&lt;p&gt;This basically means creating the user and the database.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# change current user to postgres&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (this was created for you as part of the PostgreSQL installation)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su - postgres
&lt;span class=&quot;c&quot;&gt;# go into PostgreSQL&lt;/span&gt;
psql&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;c1&quot;&gt;--- create the user&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonarqube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PASSWORD&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'yourPassword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--- create the database&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonarqube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OWNER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonarqube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--- grant the privileges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonarqube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonarqube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--- exit PostgreSQL&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;add-inbound-rule-for-the-security-group-the-instance-belongs-to&quot;&gt;Add inbound rule for the security group the instance belongs to&lt;/h4&gt;

&lt;p&gt;In order to allow requests to be made to SonarQube you have to add an inbound rule for the security group the EC2 instance belongs to. Find the security group your instance has (on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Instances&lt;/code&gt; page, check for the &lt;code class=&quot;highlighter-rouge&quot;&gt;Security Groups&lt;/code&gt; column in the table which displays your instances, go to that SG and edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;Inbound Rules&lt;/code&gt; by adding a new one for &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and port &lt;code class=&quot;highlighter-rouge&quot;&gt;9000&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;step-3&quot;&gt;Step 3&lt;/h3&gt;

&lt;h4 id=&quot;download-the-sonarqube-server&quot;&gt;Download the SonarQube Server.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.3.0.34182.zip
unzip sonarqube-8.3.0.34182.zip
&lt;span class=&quot;c&quot;&gt;# move the unzipped folder under /opt&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo mv &lt;/span&gt;sonarqube-8.3.0.34182 /opt/sonarqube&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;step-4&quot;&gt;Step 4&lt;/h3&gt;

&lt;h4 id=&quot;create-user-for-sonarqube&quot;&gt;Create user for SonarQube.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser &lt;span class=&quot;nt&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-create-home&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--group&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--disabled-login&lt;/span&gt; sonarqube
&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; sonarqube:sonarqube /opt/sonarqube&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;step-5&quot;&gt;Step 5&lt;/h3&gt;

&lt;h4 id=&quot;configure-sonarqube-properties-and-launch-scripts&quot;&gt;Configure SonarQube properties and launch scripts.&lt;/h4&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;sonar.properties&lt;/code&gt; and add the following properties:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;vi /opt/sonarqube/conf/sonar.properties&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sonar.jdbc.username=sonarqube
sonar.jdbc.password=yourPassword
sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube
sonar.web.javaAdditionalOpts=-server
sonar.web.host=0.0.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl.conf&lt;/code&gt; and set the property &lt;code class=&quot;highlighter-rouge&quot;&gt;vm.max_map_count&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;262144&lt;/code&gt;. SonarQube will most likely not start without it!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;vi /etc/sysctl.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;sonar.sh&lt;/code&gt; and set the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;RUN_AS_USER&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;sonarqube&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;vi /opt/sonarqube/bin/linux-x86-64/sonar.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RUN_AS_USER=sonarqube
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point you should have everything in place to be able to start the SonarQube and access it in the browser.&lt;/p&gt;

&lt;h4 id=&quot;start-sonarqube&quot;&gt;Start SonarQube&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# navigate to the Sonar installation location&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/sonarqube/bin/linux-x86-64
&lt;span class=&quot;c&quot;&gt;# start Sonar&lt;/span&gt;
./sonar.sh start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Call &lt;code class=&quot;highlighter-rouge&quot;&gt;http://&amp;lt;IPv4 Public IP&amp;gt;:9000/&lt;/code&gt; in the browser, where &lt;code class=&quot;highlighter-rouge&quot;&gt;IPv4 Public IP&lt;/code&gt; stands for the public IP, which you can take from the Description information of your EC2 instance. 
You should see your SonarQube page.&lt;/p&gt;

&lt;p&gt;Now let’s configure Sonar.&lt;/p&gt;

&lt;h4 id=&quot;configure-sonarqube&quot;&gt;Configure SonarQube&lt;/h4&gt;

&lt;p&gt;First step is to &lt;em&gt;enable the mutation testing support&lt;/em&gt;, which means that you have to &lt;em&gt;install a plugin&lt;/em&gt;.
For this, login with the default credentials &lt;code class=&quot;highlighter-rouge&quot;&gt;admin/admin&lt;/code&gt;, go to &lt;code class=&quot;highlighter-rouge&quot;&gt;Administration -&amp;gt; Marketplace&lt;/code&gt; and search for &lt;code class=&quot;highlighter-rouge&quot;&gt;Mutation Analysis&lt;/code&gt; &lt;a href=&quot;https://github.com/devcon5io/mutation-analysis-plugin&quot;&gt;plugin&lt;/a&gt; and install it.
Restart the server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/sonar-mt-plugin.png&quot; alt=&quot;sonar-mt-plugin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to create a new &lt;em&gt;quality profile&lt;/em&gt;, which will contain the &lt;em&gt;default SonarQube Java rules&lt;/em&gt; and the &lt;em&gt;Mutation Analysis rules&lt;/em&gt; and set it as the &lt;em&gt;default profile for Java&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Follow the steps listed in &lt;a href=&quot;https://dzone.com/articles/mutation-testing-with-sonarqube&quot;&gt;this article&lt;/a&gt; under the section &lt;em&gt;Enable the Mutation Analysis Rules&lt;/em&gt; to achieve the above mentioned.&lt;/p&gt;

&lt;p&gt;When finished it should look something similar to this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/sonar-mt-java-rules.png&quot; alt=&quot;sonar-mt-plugin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now SonarQube should be able to interpret the mutation testing results too.&lt;/p&gt;

&lt;p&gt;Before drilling down through your project and hunting down your mutations you have to upload the mutation analysis for the project in question.&lt;/p&gt;

&lt;p&gt;I am using Maven as a build automation tool for my project and my &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; is updated accordingly.&lt;/p&gt;

&lt;p&gt;At a minimum, you need the &lt;code class=&quot;highlighter-rouge&quot;&gt;pitest-junit5-plugin&lt;/code&gt; dependency, the &lt;code class=&quot;highlighter-rouge&quot;&gt;sonar-maven-plugin&lt;/code&gt; plugin and the &lt;code class=&quot;highlighter-rouge&quot;&gt;pitest-maven&lt;/code&gt; plugin. For Java code coverage do not forget about &lt;code class=&quot;highlighter-rouge&quot;&gt;jacoco-maven-plugin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Check the &lt;a href=&quot;https://github.com/vladflore/gildedrose-refactoring-kata/blob/master/pom.xml&quot;&gt;GitHub repo&lt;/a&gt; to see how the pom.xml looks like.&lt;/p&gt;

&lt;p&gt;After your project is all set up, the following command should suffice to perform a code analysis of your code. Note that the value for &lt;code class=&quot;highlighter-rouge&quot;&gt;sonar.host.url&lt;/code&gt; should be changed
accordingly to contain the IP of your EC2 instance hosting the SonarQube Server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;mvn clean verify org.pitest:pitest-maven:mutationCoverage sonar:sonar &lt;span class=&quot;nt&quot;&gt;-Dsonar&lt;/span&gt;.host.url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://&amp;lt;IPv4 Public IP&amp;gt;:9000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And voilà the analysis of my project at that point in time (including the mutation analysis):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/sonar-analysis.png&quot; alt=&quot;sonar-mt-plugin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now go write those unit tests, kill those mutants and reach a 90%+ code coverage. I dare you! ;)&lt;/p&gt;

&lt;p&gt;Happy code crafting!&lt;/p&gt;</content><author><name>Vlad</name></author><summary type="html">In this post I will share my experience with installing SonarQube on an AWS EC2 instance. What you’ll see below are some steps and hints I followed when setting up a SonarQube Server on an EC2 machine.</summary></entry><entry><title type="html">Time to Learn</title><link href="https://vladflore.github.io/blog/best-time-to-learn" rel="alternate" type="text/html" title="Time to Learn" /><published>2020-04-14T00:00:00+02:00</published><updated>2020-04-14T00:00:00+02:00</updated><id>https://vladflore.github.io/blog/best-time-to-learn</id><content type="html" xml:base="https://vladflore.github.io/blog/best-time-to-learn">&lt;p&gt;&lt;em&gt;There is no better time than now&lt;/em&gt;, or at least this is what they say and I kind of tend to agree with it. If I wanted to really stretch it, I would say that the best time was &lt;em&gt;yesterday&lt;/em&gt; and the next best time is &lt;em&gt;now&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This applies also to learning, especially learning and even more so if you are in the Information Technology / Computer Science field, as I am.&lt;/p&gt;

&lt;p&gt;Because I am currently enjoying some free time from work and having even less distractions as before, please read &lt;em&gt;Coronavirus (COVID-19)&lt;/em&gt;, I decided to tackle different subjects or start/continue with different projects and areas of interests, which up until now didn’t get the time they really deserved.&lt;/p&gt;

&lt;p&gt;So in this short post I will list some of the things I took upon myself, maybe some of them will rise your interest too. This list will most likely change, but currently this is what I’m keeping myself busy with:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;What&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;del&gt;Preparing for &lt;a href=&quot;https://education.oracle.com/java-se-8-programmer-ii/pexam_1Z0-809&quot;&gt;Java 8 OCP&lt;/a&gt; exam&lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Preparing for &lt;a href=&quot;https://tanzu.vmware.com/training/certification/spring-professional-certification&quot;&gt;Spring Professional Certification&lt;/a&gt; exam&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Working through &lt;a href=&quot;https://www.coursera.org/specializations/software-design-architecture&quot;&gt;Coursera Software Architecture and Design Specialization&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;del&gt;Working through &lt;a href=&quot;https://app.pluralsight.com/paths/skill/domain-driven-design&quot;&gt;Pluralsight Domain Driven Design Path&lt;/a&gt;&lt;/del&gt;&lt;br /&gt;following up with Eric Evans’s and Vaughn Vernon’s books&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Getting aquainted with the &lt;a href=&quot;https://www.vim.org/&quot;&gt;vim&lt;/a&gt; text editor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Going through &lt;a href=&quot;https://missing.csail.mit.edu/&quot;&gt;the missing semester of your CS education&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Working through &lt;a href=&quot;https://school.cucumber.io/courses/bdd-with-cucumber-java&quot;&gt;BDD with Cucumber (Java)&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This is just a top 7, but much more is in the pipeline. It is kind of overwhelming if you think at all the possibilities to educate yourself and to boost your carreer. With so many online platforms offering education, more or less for free, it is a shame not to try out one or two things…or seven ;)&lt;/p&gt;

&lt;p&gt;Do take a look at &lt;a href=&quot;https://www.coursera.org/&quot;&gt;Coursera&lt;/a&gt;, &lt;a href=&quot;https://www.udemy.com/&quot;&gt;Udemy&lt;/a&gt;, &lt;a href=&quot;https://www.edx.org/&quot;&gt;edX&lt;/a&gt;, &lt;a href=&quot;https://training.linuxfoundation.org/&quot;&gt;The Linux Foundation&lt;/a&gt;, &lt;a href=&quot;https://openlearning.mit.edu/&quot;&gt;MIT Open Learning&lt;/a&gt;. You are in for a treat!&lt;/p&gt;

&lt;p&gt;Happy learning!&lt;/p&gt;</content><author><name>Vlad</name></author><summary type="html">There is no better time than now, or at least this is what they say and I kind of tend to agree with it. If I wanted to really stretch it, I would say that the best time was yesterday and the next best time is now.</summary></entry><entry><title type="html">Shell Magic</title><link href="https://vladflore.github.io/blog/shell-magic" rel="alternate" type="text/html" title="Shell Magic" /><published>2020-03-25T00:00:00+01:00</published><updated>2020-03-25T00:00:00+01:00</updated><id>https://vladflore.github.io/blog/shell</id><content type="html" xml:base="https://vladflore.github.io/blog/shell-magic">&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE 1:&lt;/em&gt;&lt;/strong&gt; This page contains some shell &lt;em&gt;magic&lt;/em&gt; which I came across in my daily business. I will update this page continuously
and this will be reflected on this page in the date information displayed under the post name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE 2:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;Please be advised that some commands listed here could have unwanted effects if you are not completely sure of what they are doing and how they are doing it.
Some of them might also require sudo access, so I am just going to assume that you know what you are doing.
You have been warned!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE 3:&lt;/em&gt;&lt;/strong&gt; All the commands have been tried on &lt;em&gt;Ubuntu 18.04.4 LTS&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-1-forcibly-removing-all-directories-and-their-content-recursively&quot;&gt;&lt;a name=&quot;1&quot;&gt;&lt;/a&gt; 1. Forcibly removing all directories and their content recursively&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^d'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $9}'&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In plain English, list the content of the current directory &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; using the long listing format &lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt;, filter out everything else that is not a directory &lt;code class=&quot;highlighter-rouge&quot;&gt;grep '^d'&lt;/code&gt;, extract the 9^th^ column (the last containing the name of the directory) &lt;code class=&quot;highlighter-rouge&quot;&gt;awk '{print $9}'&lt;/code&gt;, pass each name of the directory as an argument &lt;code class=&quot;highlighter-rouge&quot;&gt;xargs&lt;/code&gt; to the command &lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt;, which removes recursively &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; and forcibly &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; the respective directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;feel free to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt; command to read more about the programs above:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man ls&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man grep&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man awk&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man xargs&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man rm&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-2-switching-between-github-remote-urls-https-vs-ssh&quot;&gt;&lt;a name=&quot;2&quot;&gt;&lt;/a&gt; 2. Switching between GitHub remote URLs (HTTPS vs. SSH)&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;git remote &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
git remote set-url origin https://github.com/USERNAME/REPOSITORY.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First we check what kind of remote URLs we have, using option &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; of command &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote&lt;/code&gt;,
afterwards we change the remote URL to either HTTPS or SSH using one of the last two commands
(note the two different URL styles for setting the remote name &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;). Do not forget
to replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;USERNAME&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;REPOSITORY&lt;/code&gt; with the real values.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/using-git/changing-a-remotes-url#switching-remote-urls-from-ssh-to-https&quot;&gt;switching remote urls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-3-searching-for-files-and-creating-an-archive-out-of-them&quot;&gt;&lt;a name=&quot;3&quot;&gt;&lt;/a&gt; 3. Searching for files and creating an archive out of them&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; file1 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; file2 &lt;span class=&quot;se&quot;&gt;\)&lt;/span&gt; | zip -@ &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; files
&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;files.zip ~/tmp
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;
xdg-open .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First we search in the current &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; directory for entries denoting files &lt;code class=&quot;highlighter-rouge&quot;&gt;-type f&lt;/code&gt; having the name &lt;code class=&quot;highlighter-rouge&quot;&gt;-name&lt;/code&gt; &lt;em&gt;file1&lt;/em&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt; &lt;em&gt;file2&lt;/em&gt;.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;zip&lt;/code&gt; command takes the list of files &lt;code class=&quot;highlighter-rouge&quot;&gt;-@&lt;/code&gt; and creates an archive with the name &lt;em&gt;files&lt;/em&gt; containing only the files without
storing the directories where they reside. After moving &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; the archive to the &lt;em&gt;tmp&lt;/em&gt; directory we &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into it, &lt;code class=&quot;highlighter-rouge&quot;&gt;$_&lt;/code&gt; references the
last argument of the previous command, and open &lt;code class=&quot;highlighter-rouge&quot;&gt;xdg-open&lt;/code&gt; the current directory &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; with the appropriate program - in my case this is &lt;em&gt;Files&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;feel free to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt; command to read more about the commands above:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man find&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man zip&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-4-manage-processes-from-the-terminal&quot;&gt;&lt;a name=&quot;4&quot;&gt;&lt;/a&gt; 4. Manage processes from the Terminal&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# display Linux processes&lt;/span&gt;
top

&lt;span class=&quot;c&quot;&gt;# top improved, you might need to install it&lt;/span&gt;
htop

&lt;span class=&quot;c&quot;&gt;# list all running processes and look for a specific process&lt;/span&gt;
ps &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;chrome

&lt;span class=&quot;c&quot;&gt;# display processes in a tree like format&lt;/span&gt;
pstree

&lt;span class=&quot;c&quot;&gt;# look up a process based on name&lt;/span&gt;
pgrep chome

&lt;span class=&quot;c&quot;&gt;# kills process identified by the PID, use -9 or -KILL to force kill&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;kill &lt;/span&gt;PID

&lt;span class=&quot;c&quot;&gt;# kill process given its name&lt;/span&gt;
pkill chrome
killall chrome

&lt;span class=&quot;c&quot;&gt;# allows killing graphical programs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# run it and your cursor will turn into x, then click a program's window&lt;/span&gt;
xkill&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;feel free to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt; command to read more about the commands above&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-5-print-content-of-path-line-by-line&quot;&gt;&lt;a name=&quot;5&quot;&gt;&lt;/a&gt; 5. Print content of $PATH line-by-line&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pipes the content, obtained via &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;, of the &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; variable into the translate &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt; command which
replaces each occurrence of &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; with a new line &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;line1:line2 | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt;
line1
line2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;feel free to use &lt;code class=&quot;highlighter-rouge&quot;&gt;man tr&lt;/code&gt; to read more about the command&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-6-show-all-users&quot;&gt;&lt;a name=&quot;6&quot;&gt;&lt;/a&gt; 6. Show all users&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/passwd | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'{print$1}'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The content of the file &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt; is pipped into the &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;, which takes each line
and splits it into columns by the defined &lt;code class=&quot;highlighter-rouge&quot;&gt;-F&lt;/code&gt; separator &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt;
printing out the first value (the user name).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man awk&lt;/code&gt; to read more about &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; language&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-7-show-all-hidden-files&quot;&gt;&lt;a name=&quot;7&quot;&gt;&lt;/a&gt; 7. Show all hidden files&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lap&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; / | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $9}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^\.'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;List &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; all &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; content of the current directory using the long listing format &lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; appending &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; a forward slash &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; if the entry is a directory, then print only those lines which do not end with a forward slash (&lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; performs a pattern matching, while &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; inverts the match). &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; prints out the nineth column of the line - the name, and the last &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; shows only those which begin with a &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;.&lt;/p&gt;</content><author><name>Vlad</name></author><summary type="html">NOTE 1: This page contains some shell magic which I came across in my daily business. I will update this page continuously and this will be reflected on this page in the date information displayed under the post name.</summary></entry><entry><title type="html">Hello World</title><link href="https://vladflore.github.io/blog/hello-world" rel="alternate" type="text/html" title="Hello World" /><published>2020-02-10T00:00:00+01:00</published><updated>2020-02-10T00:00:00+01:00</updated><id>https://vladflore.github.io/blog/first-post</id><content type="html" xml:base="https://vladflore.github.io/blog/hello-world">&lt;p&gt;Hello Internet,&lt;/p&gt;

&lt;p&gt;so this is my first blog post, which I hope will be one of many more to come. This is more of a &lt;em&gt;hello world&lt;/em&gt; kind of post, 
a way to cut my teeth into blogging and see if it’s something I would like doing.&lt;/p&gt;

&lt;p&gt;Should you wonder by now why &lt;em&gt;hello world&lt;/em&gt;,
well just ask someone who works in IT and has learned at least one programming language.&lt;/p&gt;

&lt;p&gt;The majority of the posts will be of technical nature and will server primarily the purpose of conveying knowledge
that I gathered or stumbled upon over the time.&lt;/p&gt;

&lt;p&gt;Quite often I find myself in the position of having to do something I have already done
before, and quite often I regret not having documented that something…This blog is about changing all that and allowing me
and others to tap into that information I once used/had in order to make use of it again.&lt;/p&gt;

&lt;p&gt;I guess time will tell if this was a worthwhile endeavor or not.&lt;/p&gt;

&lt;p&gt;Happy reading,&lt;/p&gt;

&lt;p&gt;Vlad&lt;/p&gt;</content><author><name>Vlad</name></author><summary type="html">Hello Internet,</summary></entry><entry><title type="html">Software Craftsmanship</title><link href="https://vladflore.github.io/blog/sw-craftsmanship" rel="alternate" type="text/html" title="Software Craftsmanship" /><published>2020-02-10T00:00:00+01:00</published><updated>2020-02-10T00:00:00+01:00</updated><id>https://vladflore.github.io/blog/software-craftsmanship</id><content type="html" xml:base="https://vladflore.github.io/blog/sw-craftsmanship">&lt;p&gt;Last year I had the opportunity to put together and hold a presentation at a conference organized
by the &lt;a href=&quot;https://www.virtual7.de/&quot; target=&quot;_blank&quot;&gt;company&lt;/a&gt; I am currently working for. As you might have guessed from the post’s title
it was a presentation about the &lt;strong&gt;craftsmanship&lt;/strong&gt; behind &lt;strong&gt;creating software&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Creating software is no easy task, creating software &lt;strong&gt;responsibly&lt;/strong&gt; is even harder, but this should not discourage one to do so.&lt;/p&gt;

&lt;p&gt;By adhering to some healthy coding habits one can and will write code that will not make others cringe when looking at it.
Remember, &lt;strong&gt;we write code for people not for computers&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The presentation is powered by &lt;a href=&quot;https://revealjs.com/#/&quot; target=&quot;_blank&quot;&gt;reveal.js framework&lt;/a&gt;, can be watched &lt;a href=&quot;https://vladflore.github.io/software-craftsmanship/#/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; and it can be found at this &lt;a href=&quot;https://github.com/vladflore/software-craftsmanship.git&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;Happy crafting!&lt;/p&gt;</content><author><name>Vlad</name></author><summary type="html">Last year I had the opportunity to put together and hold a presentation at a conference organized by the company I am currently working for. As you might have guessed from the post’s title it was a presentation about the craftsmanship behind creating software.</summary></entry></feed>